generator client {
  provider = "prisma-client-js"
  log      = ["query", "info", "warn", "error"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                          Int             @id @default(autoincrement())
  password                    String          @db.VarChar(500)
  confirmation_code           String?         @db.VarChar(100)
  need_change                 Boolean         @default(false)
  active                      Boolean         @default(false)
  socket                      String?         @db.VarChar(100)
  connected                   Boolean         @default(false)
  super                       Boolean         @default(false)
  group_id                    Int
  created_by_id               Int?
  updated_by_id               Int?
  deleted_by_id               Int?
  created_at                  DateTime?
  updated_at                  DateTime?
  deleted_at                  DateTime?
  // relations
  user_created_by_id          user?           @relation(fields: [created_by_id], references: [id], name: "user_created_user")
  user_updated_by_id          user?           @relation(fields: [updated_by_id], references: [id], name: "user_updated_user")
  user_deleted_by_id          user?           @relation(fields: [deleted_by_id], references: [id], name: "user_deleted_user")
  user_create                 user[]          @relation("user_created_user")
  user_updated                user[]          @relation("user_updated_user")
  user_deleted                user[]          @relation("user_deleted_user")
  profile_relation            profile[]       @relation("profile_user")
  feature_create              feature[]       @relation("feature_created_user")
  feature_updated             feature[]       @relation("feature_updated_user")
  feature_deleted             feature[]       @relation("feature_deleted_user")
  group_create                group[]         @relation("group_created_user")
  group_updated               group[]         @relation("group_updated_user")
  group_deleted               group[]         @relation("group_deleted_user")
  permission_create           permission[]    @relation("permission_created_by_id")
  permission_updated          permission[]    @relation("permission_updated_by_id")
  permission_deleted          permission[]    @relation("permission_deleted_by_id")
  permission_user_relation    permission[]    @relation("permission_user_relation")
  address_created_by_id       address[]       @relation("address_created_by_id")
  address_updated_by_id       address[]       @relation("address_updated_by_id")
  address_deleted_by_id       address[]       @relation("address_deleted_by_id")
  user_relation               board[]         @relation("user_relation")
  user_member_relation        member[]        @relation("user_member_relation")
  card_activity_user_relation card_activity[] @relation("card_activity_user_relation")
  card_member_user_relation   card_member[]   @relation("card_member_user_relation")
}

model profile {
  id               Int      @id @default(autoincrement())
  name             String   @db.VarChar(200)
  email            String?  @db.VarChar(200)
  cellphone        String?  @db.VarChar(11)
  cpf              String?  @db.VarChar(14)
  rg               String?  @db.VarChar(11)
  photo            String?  @db.VarChar(300)
  address_id       Int?
  user_id          Int
  // relations
  user             user     @relation(fields: [user_id], references: [id], name: "profile_user")
  address_relation address? @relation(fields: [address_id], references: [id], name: "profile_address")
}

model device_component {
  id                         Int       @id @default(autoincrement())
  name                       String    @db.VarChar(40)
  device_id                  Int
  // relations
  device_components_relation feature[] @relation("feature_device_components")
}

model action {
  id                             Int              @id @default(autoincrement())
  name                           String           @db.VarChar(40)
  canonical                      String           @db.VarChar(40)
  // relations
  feature_action_action_relation feature_action[] @relation("feature_action_action")
  permission_action_relation     permission[]     @relation("permission_action_relation")
}

model feature {
  id                              Int               @id @default(autoincrement())
  name                            String            @db.VarChar(100)
  active                          Boolean           @default(true)
  path                            String?           @db.VarChar(300)
  icon                            String?           @db.VarChar(100)
  visible                         Boolean           @default(true)
  canonical                       String            @db.VarChar(100)
  device_components_id            Int?
  created_by_id                   Int
  updated_by_id                   Int?
  deleted_by_id                   Int?
  created_at                      DateTime
  updated_at                      DateTime?
  deleted_at                      DateTime?
  // relations
  feature_created_by_id           user              @relation(fields: [created_by_id], references: [id], name: "feature_created_user")
  feature_updated_by_id           user?             @relation(fields: [updated_by_id], references: [id], name: "feature_updated_user")
  feature_deleted_by_id           user?             @relation(fields: [deleted_by_id], references: [id], name: "feature_deleted_user")
  device_components_relation      device_component? @relation(fields: [device_components_id], references: [id], name: "feature_device_components")
  feature_action_feature_relation feature_action[]  @relation("feature_action_feature")
  group_feature_feature_relation  group_feature[]   @relation("group_feature_feature_relation")
  permission_feature_relation     permission[]      @relation("permission_feature_relation")
}

model feature_action {
  id                              Int     @id @default(autoincrement())
  feature_id                      Int
  action_id                       Int
  // relations
  feature_action_feature_relation feature @relation(fields: [feature_id], references: [id], name: "feature_action_feature")
  feature_action_action_relation  action  @relation(fields: [action_id], references: [id], name: "feature_action_action")
}

model group {
  id                           Int             @id @default(autoincrement())
  name                         String          @db.VarChar(100)
  color                        String?         @db.VarChar(7)
  active                       Boolean         @default(true)
  super                        Boolean         @default(false)
  canonical                    String          @db.VarChar(100)
  created_by_id                Int?
  updated_by_id                Int?
  deleted_by_id                Int?
  created_at                   DateTime?
  updated_at                   DateTime?
  deleted_at                   DateTime?
  // relations
  group_created_by_id          user?           @relation(fields: [created_by_id], references: [id], name: "group_created_user")
  group_updated_by_id          user?           @relation(fields: [updated_by_id], references: [id], name: "group_updated_user")
  group_deleted_by_id          user?           @relation(fields: [deleted_by_id], references: [id], name: "group_deleted_user")
  group_feature_group_relation group_feature[] @relation("group_feature_group_relation")
}

model group_feature {
  id                             Int      @id @default(autoincrement())
  free_for_group                 Boolean? @default(false)
  group_id                       Int
  feature_id                     Int
  // relations
  group_feature_group_relation   group    @relation(fields: [group_id], references: [id], name: "group_feature_group_relation")
  group_feature_feature_relation feature  @relation(fields: [feature_id], references: [id], name: "group_feature_feature_relation")
}

model permission {
  id                          Int       @id @default(autoincrement())
  user_id                     Int
  feature_id                  Int
  action_id                   Int
  created_by_id               Int?
  updated_by_id               Int?
  deleted_by_id               Int?
  created_at                  DateTime?
  updated_at                  DateTime?
  deleted_at                  DateTime?
  // relations
  permission_created_by_id    user?     @relation(fields: [created_by_id], references: [id], name: "permission_created_by_id")
  permission_updated_by_id    user?     @relation(fields: [updated_by_id], references: [id], name: "permission_updated_by_id")
  permission_deleted_by_id    user?     @relation(fields: [deleted_by_id], references: [id], name: "permission_deleted_by_id")
  permission_user_relation    user      @relation(fields: [user_id], references: [id], name: "permission_user_relation")
  permission_feature_relation feature   @relation(fields: [feature_id], references: [id], name: "permission_feature_relation")
  permission_action_relation  action    @relation(fields: [action_id], references: [id], name: "permission_action_relation")
}

model state {
  ibge                Int    @id
  acronym             String @db.VarChar(2)
  name                String @db.VarChar(300)
  city_state_relation city[] @relation("city_state_relation")
}

model city {
  ibge                Int    @id
  state_ibge          Int
  name                String @db.VarChar(300)
  city_state_relation state  @relation(fields: [state_ibge], references: [ibge], name: "city_state_relation")
}

model address {
  id                    Int       @id @default(autoincrement())
  street                String    @db.VarChar(200)
  street_number         String    @db.VarChar(10)
  neighborhood          String?   @db.VarChar(100)
  cep                   String    @db.VarChar(8)
  city_ibge             Int
  observation           String?   @db.VarChar(500)
  created_by_id         Int?
  updated_by_id         Int?
  deleted_by_id         Int?
  created_at            DateTime?
  updated_at            DateTime?
  deleted_at            DateTime?
  // relations
  profile_relation      profile[] @relation("profile_address")
  address_created_by_id user?     @relation(fields: [created_by_id], references: [id], name: "address_created_by_id")
  address_updated_by_id user?     @relation(fields: [updated_by_id], references: [id], name: "address_updated_by_id")
  address_deleted_by_id user?     @relation(fields: [deleted_by_id], references: [id], name: "address_deleted_by_id")
}

model params {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(100)
  value String @db.VarChar(100)
}

model board {
  id                         Int           @id @default(autoincrement())
  name                       String        @db.VarChar(80)
  owner                      Int
  qdt_columns                Int
  // relations
  user_relation              user          @relation(fields: [owner], references: [id], name: "user_relation")
  board_member_relation      member[]      @relation("board_member_relation")
  column_board_relation      column[]      @relation("column_board_relation")
  card_status_board_relation card_status[] @relation("card_status_board_relation")
}

model member {
  id                    Int   @id @default(autoincrement())
  board                 Int
  user                  Int
  // relations
  board_member_relation board @relation(fields: [board], references: [id], name: "board_member_relation")
  user_member_relation  user  @relation(fields: [user], references: [id], name: "user_member_relation")
}

model column {
  id                    Int    @id @default(autoincrement())
  board_id              Int
  name                  String @db.VarChar(80)
  position              Int
  qtd_cards             Int
  // relations
  column_board_relation board  @relation(fields: [board_id], references: [id], name: "column_board_relation")
  card_column_relation  card[] @relation("card_column_relation")
}

model card_status {
  id                         Int    @id @default(autoincrement())
  board_id                   Int
  name                       String @db.VarChar(50)
  // relations
  card_status_board_relation board  @relation(fields: [board_id], references: [id], name: "card_status_board_relation")
  card_card_status_relation  card[] @relation("card_card_status_relation")
}

model card {
  id                                      Int                 @id @default(autoincrement())
  column_id                               Int
  status_id                               Int
  title                                   String              @db.VarChar(100)
  content                                 String
  // relations
  card_column_relation                    column              @relation(fields: [column_id], references: [id], name: "card_column_relation")
  card_card_status_relation               card_status         @relation(fields: [status_id], references: [id], name: "card_card_status_relation")
  card_activity_card_relation             card_activity[]     @relation("card_activity_card_relation")
  card_attachment_card_relation           card_attachment[]   @relation("card_attachment_card_relation")
  card_dependencies_card_relation         card_dependencies[] @relation("card_dependencies_card_relation")
  card_dependencies_dependencies_relation card_dependencies[] @relation("card_dependencies_dependencies_relation")
  card_member_card_relation               card_member[]       @relation("card_member_card_relation")
}

model card_activity {
  id                          Int    @id @default(autoincrement())
  card_id                     Int
  user_id                     Int
  activity                    String
  // relations
  card_activity_card_relation card   @relation(fields: [card_id], references: [id], name: "card_activity_card_relation")
  card_activity_user_relation user   @relation(fields: [user_id], references: [id], name: "card_activity_user_relation")
}

model attachment_type {
  id                                       Int               @id @default(autoincrement())
  icon                                     String            @db.VarChar(30)
  // relations
  card_attachment_attachment_type_relation card_attachment[] @relation("card_attachment_attachment_type_relation")
}

model card_attachment {
  id                                       Int             @id @default(autoincrement())
  card_id                                  Int
  type_id                                  Int
  name                                     String          @db.VarChar(80)
  path                                     String          @db.VarChar(100)
  // relations
  card_attachment_card_relation            card            @relation(fields: [card_id], references: [id], name: "card_attachment_card_relation")
  card_attachment_attachment_type_relation attachment_type @relation(fields: [type_id], references: [id], name: "card_attachment_attachment_type_relation")
}

model card_dependencies {
  id                                      Int  @id @default(autoincrement())
  card_id                                 Int
  dependence_id                           Int
  // relations
  card_dependencies_card_relation         card @relation(fields: [card_id], references: [id], name: "card_dependencies_card_relation")
  card_dependencies_dependencies_relation card @relation(fields: [dependence_id], references: [id], name: "card_dependencies_dependencies_relation")
}

model card_member {
  id                        Int  @id @default(autoincrement())
  card_id                   Int
  user_id                   Int
  // relations
  card_member_card_relation card @relation(fields: [card_id], references: [id], name: "card_member_card_relation")
  card_member_user_relation user @relation(fields: [user_id], references: [id], name: "card_member_user_relation")
}
